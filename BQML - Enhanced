CREATE OR REPLACE TABLE `my_dataset.f1_telemetry_features` AS
SELECT
  speed_before_braking,
  braking_distance,
  track_condition,
  temperature,
  tire_type,
  tire_wear,
  speed_before_braking * tire_wear AS interaction_speed_tire,
  POW(speed_before_braking, 2) AS speed_squared,
  IF(circuit = 'CircuitA', 1, 0) AS is_circuitA, -- repeat for all circuits
  ... -- Add more features as necessary
FROM
  `my_dataset.f1_telemetry_data`;



CREATE OR REPLACE MODEL `my_dataset.f1_braking_model_v2`
OPTIONS(model_type='boosted_tree_regressor', boosting_type='GBTREE', learn_rate=0.1, max_depth=5) AS
SELECT
  speed_before_braking,
  braking_distance,
  track_condition,
  temperature,
  tire_type,
  tire_wear,
  interaction_speed_tire,
  speed_squared,
  is_circuitA,
  ...,
  speed_after_corner AS label
FROM
  `my_dataset.f1_telemetry_features`;


SELECT
  *
FROM
  ML.EVALUATE(MODEL `my_dataset.f1_braking_model_v2`,
    (
    SELECT
      speed_before_braking,
      braking_distance,
      track_condition,
      temperature,
      tire_type,
      tire_wear,
      interaction_speed_tire,
      speed_squared,
      is_circuitA,
      ...,
      speed_after_corner AS label
    FROM
      `my_dataset.f1_telemetry_features_test` -- This should be your test dataset
    ));


SELECT
  speed_before_braking,
  braking_distance,
  track_condition,
  temperature,
  tire_type,
  tire_wear,
  interaction_speed_tire,
  speed_squared,
  is_circuitA,
  ...,
  predicted_speed_after_corner
FROM
  ML.PREDICT(MODEL `my_dataset.f1_braking_model_v2`,
    (
    SELECT
      speed_before_braking,
      braking_distance,
      track_condition,
      temperature,
      tire_type,
      tire_wear,
      interaction_speed_tire,
      speed_squared,
      is_circuitA,
      ...
    FROM
      `my_dataset.f1_telemetry_features_to_predict` -- This should be new data you want predictions on
    ));
